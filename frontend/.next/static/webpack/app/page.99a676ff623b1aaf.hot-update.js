"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_BASE_URL: () => (/* binding */ API_BASE_URL),\n/* harmony export */   getAgentStatus: () => (/* binding */ getAgentStatus),\n/* harmony export */   getGEPAMetrics: () => (/* binding */ getGEPAMetrics),\n/* harmony export */   getGEPAStatus: () => (/* binding */ getGEPAStatus),\n/* harmony export */   healthCheck: () => (/* binding */ healthCheck),\n/* harmony export */   search: () => (/* binding */ search),\n/* harmony export */   searchTraditional: () => (/* binding */ searchTraditional),\n/* harmony export */   searchWithGEPA: () => (/* binding */ searchWithGEPA),\n/* harmony export */   submitFeedback: () => (/* binding */ submitFeedback),\n/* harmony export */   triggerGEPAOptimization: () => (/* binding */ triggerGEPAOptimization)\n/* harmony export */ });\n// API integration for YSearch2 with GEPA optimization\nconst API_BASE_URL =  false ? 0 : 'http://localhost:8000';\n// Search with GEPA optimization (default)\nasync function searchWithGEPA(request) {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/search/gepa\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n    });\n    if (!response.ok) {\n        throw new Error(\"Search failed: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Traditional search without GEPA\nasync function searchTraditional(request) {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/search/traditional\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n    });\n    if (!response.ok) {\n        throw new Error(\"Traditional search failed: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Default search (uses GEPA)\nasync function search(request) {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/search\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n    });\n    if (!response.ok) {\n        throw new Error(\"Search failed: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Submit user feedback for GEPA learning\nasync function submitFeedback(feedback) {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/feedback\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(feedback)\n    });\n    if (!response.ok) {\n        throw new Error(\"Feedback submission failed: \".concat(response.statusText));\n    }\n}\n// Get GEPA optimization metrics\nasync function getGEPAMetrics() {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/gepa/metrics\"));\n    if (!response.ok) {\n        throw new Error(\"Failed to get GEPA metrics: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Get GEPA system status\nasync function getGEPAStatus() {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/gepa/status\"));\n    if (!response.ok) {\n        throw new Error(\"Failed to get GEPA status: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Trigger GEPA optimization manually\nasync function triggerGEPAOptimization() {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/gepa/optimize\"), {\n        method: 'POST'\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to trigger GEPA optimization: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Get agent status\nasync function getAgentStatus() {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/agents/status\"));\n    if (!response.ok) {\n        throw new Error(\"Failed to get agent status: \".concat(response.statusText));\n    }\n    return response.json();\n}\n// Health check\nasync function healthCheck() {\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/health\"));\n    if (!response.ok) {\n        throw new Error(\"Health check failed: \".concat(response.statusText));\n    }\n    return response.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});